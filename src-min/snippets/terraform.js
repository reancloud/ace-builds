define("ace/snippets/terraform",["require","exports","module"],function(e,t,n){"use strict";t.snippetText='# terraform functions\nsnippet abs\n	abs(${1})\nsnippet max\n	max(${1}, ${2})\nsnippet ceil\n	ceil(${1})\nsnippet floor\n	floor(${1})\nsnippet log\n	log(${1}, ${2})\nsnippet min\n	min(${1}, ${2})\nsnippet parseint\n	parseint("${1}", ${2})\nsnippet pow\n	pow(${1}, ${2})\nsnippet signum\n	signum(${1})\nsnippet chomp\n	chomp("${1}")\nsnippet format\n	format("${1}", ${2})\nsnippet formatlist\n	formatlist("${1}", ${2})\nsnippet indent\n	indent(${1}, ${2})\nsnippet join\n	join("${1}", [${2}])\nsnippet lower\n	lower("${1}")\nsnippet regex\n	regex("${1}", "${2}")\nsnippet regexall\n	regexall("${1}", "${2}")\nsnippet replace\n	replace("${1}", "${2}", "${3}")\nsnippet split\n	split("${1}", "${2}")\nsnippet strrev\n	strrev("${1}")\nsnippet substr\n	substr("${1}", ${2}, ${3})\nsnippet title\n	title("${1}")\nsnippet trim\n	trim("${1}", "${2}")\nsnippet trimprefix\n	trimprefix("${1}", "${2}")\nsnippet trimsuffix\n	trimsuffix("${1}", "${2}")\nsnippet trimspace\n	trimspace("${1}")\nsnippet upper\n	upper("${1}")\nsnippet alltrue\n	alltrue([${1}])\nsnippet anytrue\n	anytrue([${1}])\nsnippet chunklist\n	chunklist([${1}], ${2})\nsnippet coalesce\n	coalesce(${1}, ${2})\n snippet coalescelist\n	coalescelist([${1}],[${2}])\nsnippet compact\n	compact([${1}])\nsnippet concat\n	concat([${1}], [${2}])\nsnippet contains\n	contains([${1}], ${2})\nsnippet distinct\n	distinct([${1}])\nsnippet element\n	element([${1}], ${2})\nsnippet flatten\n	flatten([${1}])\nsnippet index\n	index([${1}], ${2})\nsnippet keys\n	keys({${1}})\nsnippet length\n	length([${1}])\nsnippet list\n	list(${1})\nsnippet lookup\n	lookup({${1}}, "${2}", "${3}")\nsnippet map\n	map(${1}, ${2})\nsnippet matchkeys\n	matchkeys([${1}], [${2}], [${3}])\nsnippet merge\n	merge({${1}}, {${2}})\nsnippet range\n	range(${1}, ${2}, ${3})\nsnippet reverse\n	reverse([${1}])\nsnippet setintersection\n	setintersection([${1}], [${2}])\nsnippet setproduct\n	setproduct([${1}], [${2}])\nsnippet setsubtract\n	setsubtract([${1}], [${2}])\nsnippet setunion\n	setunion([${1}], [${2}])\nsnippet slice\n	slice([${1}], ${2}, ${3})\nsnippet sort\n	sort([${1}])\nsnippet sum\n	sum([${1}])\nsnippet transpose\n	transpose({"${1}" = [${2}]})\nsnippet values\n	values({${1}})\nsnippet zipmap\n	zipmap([${1}], [${2}])\nsnippet base64decode\n	base64decode("${1}")\nsnippet base64encode\n	base64encode("${1}")\nsnippet base64gzip\n	base64gzip("${1}")\nsnippet csvdecode\n	csvdecode("${1}")\nsnippet jsondecode\n	jsondecode("${1}")\nsnippet jsonencode\n	jsonencode("${1}")\nsnippet textdecodebase64\n	textdecodebase64("${1}", "${2}")\nsnippet textencodebase64\n	textencodebase64("${1}", "${2}")\nsnippet urlencode\n	urlencode("${1}")\nsnippet yamldecode\n	yamldecode("${1}")\nsnippet yamlencode\n	yamlencode("${1}")\nsnippet abspath\n	abspath("${1}")\nsnippet dirname\n	dirname("${1}")\nsnippet pathexpand\n	pathexpand("${1}")\nsnippet basename\n	basename("${1}")\nsnippet file\n	file("${1}")\nsnippet fileexists\n	fileexists("${1}")\nsnippet fileset\n	fileset("${1}", "${2}")\nsnippet filebase64\n	filebase64("${1}")\nsnippet templatefile\n	templatefile("${1}")\nsnippet formatdate\n	formatdate("${1}", "${2}")\nsnippet timeadd\n	timeadd("${1}", "${2}")\nsnippet timestamp\n	timestamp()\nsnippet base64sha256\n	base64sha256("${1}")\nsnippet base64sha512\n	base64sha512("${1}")\nsnippet bcrypt\n	bcrypt("${1}")\nsnippet filebase64sha256\n	filebase64sha256("${1}")\nsnippet filebase64sha512\n	filebase64sha512("${1}")\nsnippet filemd5\n	filemd5("${1}")\nsnippet filesha1\n	filesha1("${1}")\nsnippet filesha256\n	filesha256("${1}")\nsnippet md5\n	md5("${1}")\nsnippet rsadecrypt\n	rsadecrypt("${1}")\nsnippet sha1\n	sha1("${1}")\nsnippet sha256\n	sha256("${1}")\nsnippet sha512\n	sha512("${1}")\nsnippet uuid\n	uuid()\nsnippet uuidv5\n	uuidv5("${1}", "${2}")\nsnippet cidrhost\n	cidrhost("${1}", ${2})\nsnippet cidrnetmask\n	cidrnetmask("${1}")\nsnippet cidrsubnet\n	cidrsubnet("${1}", ${2}, ${3})\nsnippet cidrsubnets\n	cidrsubnets("${1}", ${2})\nsnippet can\n	can(${1})\nsnippet defaults\n	defaults(${1}, ${2})\nsnippet tobool\n	tobool(${1})\nsnippet tolist\n	tolist([${1}])\nsnippet tomap\n	tomap({${1}})\nsnippet tonumber\n	tonumber(${1})\nsnippet toset\n	toset([${1}])\nsnippet tostring\n	tostring(${1})\nsnippet try\n	try(${1}, ${2})\n\n# heredoc\nsnippet <<EOT\n	<<EOT\n	${1}\n	EOT\n# count\nsnippet count\n	count =\nsnippet for\n	for ${1} in ${2} : ${3}\nsnippet dynamic\n	dynamic "${1}" {\n		${2}\n	}\nsnippet provisioner\n	provisioner "${1}" {\n		${2}\n	}\n\n\n\n',t.scope="terraform"});
                (function() {
                    window.require(["ace/snippets/terraform"], function(m) {
                        if (typeof module == "object" && typeof exports == "object" && module) {
                            module.exports = m;
                        }
                    });
                })();
            